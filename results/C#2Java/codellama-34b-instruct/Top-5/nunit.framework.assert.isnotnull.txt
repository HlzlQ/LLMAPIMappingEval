The C# API `nunit.framework.assert.isnotnull` is used to assert that an object reference is not null in NUnit testing framework. The equivalent Java API for this functionality can be found in the JUnit testing framework, specifically in the `org.junit.Assert` class.

Here are the 5 most likely Java APIs that you might use to achieve the same functionality as `nunit.framework.assert.isnotnull`:

1. `org.junit.Assert.assertNotNull(Object)`: This method asserts that an object reference is not null. It takes a single argument of type `Object`, which represents the object reference to be tested. If the object reference is null, this method will throw an `AssertionError`.
2. `org.junit.Assert.assertNotNull(String, Object)`: This method asserts that an object reference is not null and also takes a message string that describes the assertion failure if it occurs. It takes two arguments: the first argument is a `String` that represents the message to be displayed in case of failure, and the second argument is the `Object` reference to be tested.
3. `org.junit.Assert.assertNotNull(Object, String)`: This method asserts that an object reference is not null and also takes a message string that describes the assertion failure if it occurs. It takes two arguments in the reverse order compared to the previous method: the first argument is the `Object` reference to be tested, and the second argument is a `String` that represents the message to be displayed in case of failure.
4. `org.junit.Assert.assertNotNull(Object, Supplier)`: This method asserts that an object reference is not null and also takes a supplier function that provides a custom message string if the assertion fails. It takes two arguments: the first argument is the `Object` reference to be tested, and the second argument is a `Supplier<String>` that provides the message string in case of failure.
5. `org.junit.Assert.assertNotNull(Object, Function)`: This method asserts that an object reference is not null and also takes a function that provides a custom message string if the assertion fails. It takes two arguments: the first argument is the `Object` reference to be tested, and the second argument is a `Function<String>` that provides the message string in case of failure.

Note that these are just some of the possible Java APIs that you might use to achieve the same functionality as `nunit.framework.assert.isnotnull`. The specific API you choose to use will depend on your specific testing needs and preferences.