
MXNet does not have an exact equivalent of TensorFlow's `tf.compat.v1.nn.avg_pool` API. However, MXNet provides a similar functionality through its `mxnet.ndarray.Pooling` module. Specifically, you can use the `mxnet.ndarray.Pooling.avg_pool` function to perform average pooling on an input array.

Here's an example of how to use `mxnet.ndarray.Pooling.avg_pool` in MXNet:
```python
import mxnet as mx

# Create a random input array
input_data = mx.nd.random.normal(shape=(1, 3, 224, 224))

# Define the pooling parameters
pool_size = (2, 2)
strides = (2, 2)
padding = 'VALID'

# Perform average pooling on the input array
output = mx.ndarray.Pooling.avg_pool(input_data, pool_size, strides, padding)
```
In this example, we create a random input array with shape `(1, 3, 224, 224)`, which represents a batch of 1 image with 3 color channels and a height and width of 224 pixels. We then define the pooling parameters, including the pool size, strides, and padding mode. Finally, we perform average pooling on the input array using `mxnet.ndarray.Pooling.avg_pool`, which returns an output array with shape `(1, 3, 112, 112)`.