C# does not have an exact equivalent to the Java API "java.lang.reflect.constructor.newinstance". However, C# provides a similar functionality through the use of reflection.

The closest equivalent in C# is the "Activator.CreateInstance" method, which creates a new instance of the specified type using reflection. This method can be used to create an instance of a class without knowing the type at compile time.

Here's an example of how you might use "Activator.CreateInstance" in C#:
```
Type type = Type.GetType("MyNamespace.MyClass");
object obj = Activator.CreateInstance(type);
```
This code creates a new instance of the class "MyClass" in the namespace "MyNamespace". The resulting object is stored in the variable "obj".