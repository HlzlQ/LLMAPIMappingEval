C# does not have a direct equivalent to the `java.util.ArrayList` class. However, you can use the `List<T>` class in C# to achieve similar functionality. The `List<T>` class is a generic collection that allows you to store a list of objects of any type.

To get an element from a `List<T>`, you can use the `ElementAt` method, which takes an index as its argument and returns the element at that index. For example:
```
List<string> myList = new List<string>();
myList.Add("apple");
myList.Add("banana");
myList.Add("orange");

string firstElement = myList.ElementAt(0); // returns "apple"
string secondElement = myList.ElementAt(1); // returns "banana"
```
Alternatively, you can use the `Get` method to get an element from a list by its index. For example:
```
List<string> myList = new List<string>();
myList.Add("apple");
myList.Add("banana");
myList.Add("orange");

string firstElement = myList.Get(0); // returns "apple"
string secondElement = myList.Get(1); // returns "banana"
```
Note that the `Get` method is not available in all versions of C#, so you may need to use the `ElementAt` method instead if it is not available.